[build-system]
requires = ["setuptools", "wheel", "setuptools-rust"]
build-backend = "setuptools.build_meta"

[project]
name = "quantum_logical"
description = "logical state encodings for error-detection/correction of quantum states"
version = "0.1.0"
authors = [{ name = "Evan McKinney" }]
requires-python = ">=3.9"
dependencies = [
    "tqdm",
    "numpy",
    "qiskit",
    "qutip",
    "weylchamber",
    "matplotlib",
    "LovelyPlots",
    "rustworkx",

]

[project.optional-dependencies]
dev = ["ipykernel", "pre-commit", "pylatexenc", "ipywidgets"]
format = [
    "pre-commit",
    "black[jupyter]",
    "isort",
    "tomli",
    "pydocstyle",
    "ruff",
    "docformatter[tomli]",
]
test = ["pytest"]

[tool.ruff]
target-version = "py39"
line-length = 88
fix = true

[tool.black]
line-length = 88

[tool.isort]
profile = "black"


[[tool.setuptools-rust.ext-modules]]
target = "quantum_logical._lib"
# ^-- The last part of the target name (e.g. "rust") should match lib.name in Cargo.toml,
#     but you can add a prefix to nest it inside of a parent Python package or namespace.
#     Note that lib.name may not be defined in the Cargo.toml, but you still
#     have to match the name of the function with the `#[pymodule]` attribute.
path = "rustlib/Cargo.toml"
# ^-- Default value for cargo's manifest (can be omitted)
#     Each manifest can have a single [lib] definition.
#     To specify multiple extension modules you can use different toml files (one each).
binding = "PyO3" # Default value, can be omitted
debug = false
# See reference for RustExtension in https://setuptools-rust.readthedocs.io/en/latest/reference.html
